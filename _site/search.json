[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is Group 8’s Geospatial Analytics and Applications (IS415) Project Website."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to CarSpot: Geospatial Parking Analysis!!",
    "section": "",
    "text": "Group members (Team 8) : Celine, Gail, Kathy\nOverview\nWith theme of Spatial Points Patterns, this project explore the distributions of car parks in Singapore with a range of useful graphs and maps in our application to enable users to make meaningful insights.\nLink to our Github"
  },
  {
    "objectID": "Project Overview/overview.html#a-shiny-web-application-for-teaching-model-based-geostatistics-to-population-health-scientists",
    "href": "Project Overview/overview.html#a-shiny-web-application-for-teaching-model-based-geostatistics-to-population-health-scientists",
    "title": "Overview",
    "section": "1) A Shiny Web Application for teaching model-based geostatistics to population health scientists",
    "text": "1) A Shiny Web Application for teaching model-based geostatistics to population health scientists\n\n\n\n\nSummary:\n\nMBGapp is a Shiny Web Application that can be used to teach the different stages of a geostatistical analysis. In this case study, they make use of the Loa loa (eyeworm) data from Cameroon to analyse its rate of infection. Through this model-based geostatistics (MBG) study, they are able to study the public health problems by using spatially discrete survey data to investigate spatial variation in disease risk.\n\n\n\nLearning Points:\n\nMBGapp has a sidebar which has a ‘upload data’ functionality which allows users to upload their file in CSV format. Users are also prompted about the projection format so that the coordinates displayed can be accurate.\nThere are various tabs to view the distribution such as ‘Explore’, ‘Variogram’, ‘Estimation’, ‘Prediction’ and ‘Report’ to use for all-rounded analysis.\n\n\n\nLinking back to our project:\n\nWe will ensure that users are able to upload their data properly for analysis\nWe could have different tabs for different functions to serve various purposes."
  },
  {
    "objectID": "Project Overview/overview.html#analysing-the-global-and-local-spatial-associations-of-medical-resources-across-wuhan-city-using-poi-data",
    "href": "Project Overview/overview.html#analysing-the-global-and-local-spatial-associations-of-medical-resources-across-wuhan-city-using-poi-data",
    "title": "Overview",
    "section": "2. Analysing the global and local spatial associations of medical resources across Wuhan city using POI data",
    "text": "2. Analysing the global and local spatial associations of medical resources across Wuhan city using POI data\n\n\nSummary\n\nThis article is about how colocation quotients are used to identify co-location between different medical resources in Wuhan from the global and local perspective.\nLCLQ is a better analysis tool compared to GLCQ\n\n\n\nLearning Points\n\nThe colocation quotient between several categories is more suited for urban analytics in contrast to other methods for evaluating spatial connection (such as Moran’s I for interval and ratio data).\nThe global colocation quotient (GCLQ) does not take spatial heterogeneity into account, it evaluates the direction and intensity of the global spatial connections between medical resources within and between categories throughout the research area (nonstationary colocation).\nThe power of the LCLQ is its ability to map the direction and intensity of local spatial associations, i.e., colocation within a local neighbourhood. Compared with the global colocation quotient, the LCLQ also produces maps that are easier to interpret.\n\n\n\nLinking back to our project\nWe will apply the LCLQ to identify colocation between HDB carparks and different types of facilities in the neighbourhoods (e.g. HDB Buildings, Hawker Centers and Shopping Malls)"
  },
  {
    "objectID": "Project Overview/overview.html#spatial-disparities-of-self-reported-covid-19-cases-and-influencing-factors-in-wuhan-china",
    "href": "Project Overview/overview.html#spatial-disparities-of-self-reported-covid-19-cases-and-influencing-factors-in-wuhan-china",
    "title": "Overview",
    "section": "3. Spatial disparities of self-reported COVID-19 cases and influencing factors in Wuhan, China",
    "text": "3. Spatial disparities of self-reported COVID-19 cases and influencing factors in Wuhan, China\n\n\nSummary\n\nKernel Density Estimation (KDE) method to investigate variations in the intensity of the COVID-19 epidemic across different spatial regions. Additionally, a geographically weighted regression (GWR) model to assess how the population dynamics, transportation and social interactions contributed to the spread of the COVID-19.\n\n\n\nLearning Points\n\nFactors such as population density, transportation and social interactions greatly influence the choice of setting up health facilities that is crucial. Because the regions with elevated morbidity rates are predominantly located in commercial hubs and densely populated residential areas with greater population densities and more frequent social interactions.\n\n\n\nLinking back to our project\n\nWe will offer a range of bandwidth values to enable to select the most suitable option for analysis\nA functionality will be incorporated to aid users in comprehending the outcomes of their statistical analysis and functions."
  },
  {
    "objectID": "Project Overview/overview.html#homepage",
    "href": "Project Overview/overview.html#homepage",
    "title": "Overview",
    "section": "Homepage",
    "text": "Homepage"
  },
  {
    "objectID": "Project Overview/overview.html#spatial-statistical-functions",
    "href": "Project Overview/overview.html#spatial-statistical-functions",
    "title": "Overview",
    "section": "Spatial Statistical Functions",
    "text": "Spatial Statistical Functions\n\nKernel Density Estimation\n\n\n\nStatistical Functions\n\n\n\nLocal Co-Location Quotients (LCLQ)"
  },
  {
    "objectID": "Project Overview/overview.html#data",
    "href": "Project Overview/overview.html#data",
    "title": "Overview",
    "section": "Data",
    "text": "Data"
<<<<<<< HEAD
=======
  },
  {
    "objectID": "Project Overview/overview.html#analysing-the-global-and-local-spatial-associations-of-medical-resources-across-wuhan-city-using-poi-data",
    "href": "Project Overview/overview.html#analysing-the-global-and-local-spatial-associations-of-medical-resources-across-wuhan-city-using-poi-data",
    "title": "Overview",
    "section": "2. Analysing the global and local spatial associations of medical resources across Wuhan city using POI data",
    "text": "2. Analysing the global and local spatial associations of medical resources across Wuhan city using POI data\n\n\nSummary\n\nThis article is about how colocation quotients are used to identify co-location between different medical resources in Wuhan from the global and local perspective.\nLCLQ is a better analysis tool compared to GLCQ\n\n\n\nLearning Points\n\nThe colocation quotient between several categories is more suited for urban analytics in contrast to other methods for evaluating spatial connection (such as Moran’s I for interval and ratio data).\nThe global colocation quotient (GCLQ) does not take spatial heterogeneity into account, it evaluates the direction and intensity of the global spatial connections between medical resources within and between categories throughout the research area (nonstationary colocation).\nThe power of the LCLQ is its ability to map the direction and intensity of local spatial associations, i.e., colocation within a local neighbourhood. Compared with the global colocation quotient, the LCLQ also produces maps that are easier to interpret.\n\n\n\nLinking back to our project\nWe will apply the LCLQ to identify colocation between HDB carparks and different types of facilities in the neighbourhoods (e.g. HDB Buildings, Hawker Centers and Shopping Malls)"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html",
    "href": "hawker_centre/hawker_centre.html",
    "title": "Hawker_Centres",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap, dplyr, readr)"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#import-geo-sg",
    "href": "hawker_centre/hawker_centre.html#import-geo-sg",
    "title": "Hawker_Centres",
    "section": "0.2 Import geo-SG",
    "text": "0.2 Import geo-SG\n\nsg_sf <- st_read(dsn = \"data/coastal_outline\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\kt-x\\IS415-Project\\hawker_centre\\data\\coastal_outline' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data/mpsz\", \n                layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\kt-x\\IS415-Project\\hawker_centre\\data\\mpsz' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n0.2.1 Exclude the islands!!\n\n0.2.1.1 for the mpsz data!!\n\nunique(mpsz_sf$PLN_AREA_N)\n\n [1] \"MARINA EAST\"             \"RIVER VALLEY\"           \n [3] \"SINGAPORE RIVER\"         \"WESTERN ISLANDS\"        \n [5] \"MUSEUM\"                  \"MARINE PARADE\"          \n [7] \"SOUTHERN ISLANDS\"        \"BUKIT MERAH\"            \n [9] \"DOWNTOWN CORE\"           \"STRAITS VIEW\"           \n[11] \"QUEENSTOWN\"              \"OUTRAM\"                 \n[13] \"MARINA SOUTH\"            \"ROCHOR\"                 \n[15] \"KALLANG\"                 \"TANGLIN\"                \n[17] \"NEWTON\"                  \"CLEMENTI\"               \n[19] \"BEDOK\"                   \"PIONEER\"                \n[21] \"JURONG EAST\"             \"ORCHARD\"                \n[23] \"GEYLANG\"                 \"BOON LAY\"               \n[25] \"BUKIT TIMAH\"             \"NOVENA\"                 \n[27] \"TOA PAYOH\"               \"TUAS\"                   \n[29] \"JURONG WEST\"             \"SERANGOON\"              \n[31] \"BISHAN\"                  \"TAMPINES\"               \n[33] \"BUKIT BATOK\"             \"HOUGANG\"                \n[35] \"CHANGI BAY\"              \"PAYA LEBAR\"             \n[37] \"ANG MO KIO\"              \"PASIR RIS\"              \n[39] \"BUKIT PANJANG\"           \"TENGAH\"                 \n[41] \"SELETAR\"                 \"SUNGEI KADUT\"           \n[43] \"YISHUN\"                  \"MANDAI\"                 \n[45] \"PUNGGOL\"                 \"CHOA CHU KANG\"          \n[47] \"SENGKANG\"                \"CHANGI\"                 \n[49] \"CENTRAL WATER CATCHMENT\" \"SEMBAWANG\"              \n[51] \"WESTERN WATER CATCHMENT\" \"WOODLANDS\"              \n[53] \"NORTH-EASTERN ISLANDS\"   \"SIMPANG\"                \n[55] \"LIM CHU KANG\"           \n\n\n\nmpsz_sf <- filter(mpsz_sf, PLN_AREA_N != \"WESTERN ISLANDS\")\nmpsz_sf <- filter(mpsz_sf, PLN_AREA_N != \"NORTH-EASTERN ISLANDS\")\nmpsz_sf <- filter(mpsz_sf, PLN_AREA_N != \"SOUTHERN ISLANDS\")\n\n\n\n0.2.1.2 FOR THE COASTAL DATA\n\nunique(sg_sf$COSTAL_NAM)\n\n [1] \"Linkway\"                       \"SENTOSA\"                      \n [3] \"PULAU SARIMBUN\"                \"PULAU SAMULUN\"                \n [5] \"SINGAPORE - MAIN ISLAND\"       \"PULAU KEPPEL\"                 \n [7] \"PULAU BRANI\"                   \"ISLET\"                        \n [9] \"PULAU PALAWAN\"                 \"PULAU SUBAR DARAT\"            \n[11] \"PULAU SUBAR LAUT\"              \"PULAU TEKUKOR\"                \n[13] \"PULAU SERINGAT\"                \"PULAU SAKIJANG PELEPAH\"       \n[15] \"KUSU ISLAND(PULAU TEMBAKUL)\"   \"PULAU SAKIJANG BENDERA\"       \n[17] \"PULAU SELETAR\"                 \"PULAU PUNGGOL BARAT\"          \n[19] \"PULAU PUNGGOL TIMOR\"           \"PULAU SERANGOON(CONEY ISLAND)\"\n[21] \"PULAU SEKUDU\"                  \"PULAU SAJAHAT\"                \n[23] \"PULAU SAJAHAT KECHIL\"          \"PULAU KETAM\"                  \n[25] \"PULAU TEKONG KECHIL\"           \"PULAU UBIN\"                   \n[27] \"PULAU UNUM\"                    \"PULAU SEMECHEK\"               \n[29] \"PULAU DAMAR LAUT\"              \"PULAU BUAYA\"                  \n[31] \"PULAU SALU\"                    \"PULAU SUDONG\"                 \n[33] \"PULAU BUSING\"                  \"PULAU HANTU\"                  \n[35] \"PULAU SEMAKAU\"                 \"PULAU BUKOM\"                  \n[37] \"PULAU BUKOM KECHIL\"            \"ISLAND LINK\"                  \n[39] \"PULAU JONG\"                    \"PULAU SEBAROK\"                \n[41] \"PULAU PERGAM\"                  \"JURONG ISLAND (RECLAIM LAND)\" \n[43] \"JURONG ISLAND\"                 \"PULAU TEKONG\"                 \n[45] \"PULAU BULOH\"                   \"PULAU ULAR\"                   \n[47] \"PULAU BERKAS\"                  \"PULAU BIOLA\"                  \n[49] \"PULAU PAWAI\"                  \n\n\n\n#filter rows that contain the string 'PULAU' in the COSTAL_NAM column\nsg_sf <- sg_sf |> \n  filter(!grepl('PULAU', COSTAL_NAM))"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#import-hawker-data",
    "href": "hawker_centre/hawker_centre.html#import-hawker-data",
    "title": "Hawker_Centres",
    "section": "0.3 Import hawker data",
    "text": "0.3 Import hawker data\n\nhawker_sf <- st_read(\"data/hawker-centres/hawker-centres-geojson.geojson\") |>\n  st_transform(3414)\n\nReading layer `hawker-centres-geojson' from data source \n  `C:\\kt-x\\IS415-Project\\hawker_centre\\data\\hawker-centres\\hawker-centres-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 125 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6974 ymin: 1.272716 xmax: 103.9882 ymax: 1.449217\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nglimpse(hawker_sf)\n\nRows: 125\nColumns: 3\n$ Name        <chr> \"kml_1\", \"kml_2\", \"kml_3\", \"kml_4\", \"kml_5\", \"kml_6\", \"kml…\n$ Description <chr> \"<center><table><tr><th colspan='2' align='center'><em>Att…\n$ geometry    <POINT [m]> POINT Z (39731.49 34910.13 0), POINT Z (26332.89 299…\n\n\n\nlength(which(st_is_valid(hawker_sf) == FALSE))\n\n[1] 0"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#spatial-wrangling",
    "href": "hawker_centre/hawker_centre.html#spatial-wrangling",
    "title": "Hawker_Centres",
    "section": "0.4 Spatial wrangling",
    "text": "0.4 Spatial wrangling\n\n0.4.1 Convert sf into sp’s spatial class\n\nhawker <- as_Spatial(hawker_sf)\nsg <- as_Spatial(sg_sf)\nmpsz <- as_Spatial(mpsz_sf)\n\n\n\n0.4.2 Converting the Spatial* class into generic sp format\n\nhawker_sp <- as(hawker, \"SpatialPoints\")\nhawker_sp\n\nclass       : SpatialPoints \nfeatures    : 125 \nextent      : 12874.19, 45241.4, 28355.97, 47872.53  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp <- as(sg, \"SpatialPolygons\")\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 11 \nextent      : 2663.926, 51155.87, 21739.66, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \n\n\n\n\n0.4.3 Converting the generic sp format into spatstat’s ppp format\n\nhawker_ppp <- as(hawker_sp, \"ppp\")\nhawker_ppp\n\nPlanar point pattern: 125 points\nwindow: rectangle = [12874.19, 45241.4] x [28355.97, 47872.53] units\n\n\n\n\n0.4.4 Handling duplicated points\n\nany(duplicated(hawker_ppp))\n\n[1] FALSE"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#plot",
    "href": "hawker_centre/hawker_centre.html#plot",
    "title": "Hawker_Centres",
    "section": "0.5 Plot",
    "text": "0.5 Plot\n\ntmap_mode('view')\ntm_shape(hawker) +\n  tm_dots(alpha=0.4, \n          size=0.05)"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#hawker_ppp_jit",
    "href": "hawker_centre/hawker_centre.html#hawker_ppp_jit",
    "title": "Hawker_Centres",
    "section": "0.6 hawker_ppp_jit",
    "text": "0.6 hawker_ppp_jit\n\nhawker_ppp_jit <- rjitter(hawker_ppp, retry=TRUE, nsim=1, drop=TRUE)"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#owin-object",
    "href": "hawker_centre/hawker_centre.html#owin-object",
    "title": "Hawker_Centres",
    "section": "0.7 Owin object",
    "text": "0.7 Owin object\n\nsg_owin <- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#hawker-sg_owin",
    "href": "hawker_centre/hawker_centre.html#hawker-sg_owin",
    "title": "Hawker_Centres",
    "section": "0.8 Hawker & sg_owin",
    "text": "0.8 Hawker & sg_owin\n\nhawkerSG_ppp = hawker_ppp[sg_owin]\nplot(hawkerSG_ppp)"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#rds-file",
    "href": "hawker_centre/hawker_centre.html#rds-file",
    "title": "Hawker_Centres",
    "section": "0.9 rds file",
    "text": "0.9 rds file\n\n#hawker\nwrite_rds(hawker_sf, \"data/rds/hawker_sf.rds\")\nwrite_rds(hawker_sp, \"data/rds/hawker_sp.rds\")\nwrite_rds(hawker_ppp, \"data/rds/hawker_ppp.rds\")\nwrite_rds(hawker, \"data/rds/hawker.rds\")\n\n#sg (coastal outline)\nwrite_rds(sg_owin, \"data/rds/sg_owin.rds\")\nwrite_rds(sg, \"data/rds/sg.rds\")\nwrite_rds(sg_sf, \"data/rds/sg_sf.rds\")\nwrite_rds(sg_sp, \"data/rds/sg_sp.rds\")\n\n#mpsz\nwrite_rds(mpsz, \"data/rds/mpsz.rds\")\nwrite_rds(mpsz_sf, \"data/rds/mpsz_sf.rds\")"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#converting-the-spatial-point-data-frame-into-generic-sp-format",
    "href": "hawker_centre/hawker_centre.html#converting-the-spatial-point-data-frame-into-generic-sp-format",
    "title": "Hawker_Centres",
    "section": "1.1 Converting the spatial point data frame into generic sp format",
    "text": "1.1 Converting the spatial point data frame into generic sp format\n\npg_sp = as(punggol, \"SpatialPolygons\")\ntm_sp = as(tampines, \"SpatialPolygons\")\nck_sp = as(choa_chu_kang, \"SpatialPolygons\")\njw_sp = as(jurong, \"SpatialPolygons\")"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#creating-owin-object",
    "href": "hawker_centre/hawker_centre.html#creating-owin-object",
    "title": "Hawker_Centres",
    "section": "1.2 Creating owin object",
    "text": "1.2 Creating owin object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")"
  },
  {
    "objectID": "hawker_centre/hawker_centre.html#combining-childcare-points-and-the-study-area",
    "href": "hawker_centre/hawker_centre.html#combining-childcare-points-and-the-study-area",
    "title": "Hawker_Centres",
    "section": "1.3 Combining childcare points and the study area",
    "text": "1.3 Combining childcare points and the study area\nBy using the code chunk below, we are able to extract childcare that is within the specific region to do our analysis later on.\n\nhawker_pg_ppp = hawker_ppp_jit[pg_owin]\nhawker_tm_ppp = hawker_ppp_jit[tm_owin]\nhawker_ck_ppp = hawker_ppp_jit[ck_owin]\nhawker_jw_ppp = hawker_ppp_jit[jw_owin]\n\n\n1.3.1 Then, Combining childcare points and the study area\n\nhawker_pg_ppp = hawker_ppp_jit[punggol_owin]\nhawker_tm_ppp = hawker_ppp_jit[tampines_owin]\nhawker_ck_ppp = hawker_ppp_jit[choa_chu_kang_owin]\nhawker_jw_ppp = hawker_ppp_jit[jurong_owin]\n\nNext, rescale() function is used to trasnform the unit of measurement from metre to kilometre.\n\nhawker_pg_ppp.km = rescale(hawker_pg_ppp, 1000, \"km\")\nhawker_tm_ppp.km = rescale(hawker_tm_ppp, 1000, \"km\")\nhawker_ck_ppp.km = rescale(hawker_ck_ppp, 1000, \"km\")\nhawker_jw_ppp.km = rescale(hawker_jw_ppp, 1000, \"km\")\n\nPlot w the points\n\npar(mfrow=c(2,2))\nplot(hawker_pg_ppp.km, main=\"Punggol\")\nplot(hawker_tm_ppp.km, main=\"Tampines\")\nplot(hawker_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(hawker_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "hdb carpark/hdb_carpark.html",
    "href": "hdb carpark/hdb_carpark.html",
    "title": "hdb_carpark",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap, dplyr, tidyverse)"
  },
  {
    "objectID": "hdb carpark/hdb_carpark.html#import-geo-sg",
    "href": "hdb carpark/hdb_carpark.html#import-geo-sg",
    "title": "hdb_carpark",
    "section": "2 Import geo-SG",
    "text": "2 Import geo-SG\n\nsg_sf <- st_read(dsn = \"data/coastal_outline\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\kt-x\\IS415-Project\\hdb carpark\\data\\coastal_outline' using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data/mpsz\", \n                layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\kt-x\\IS415-Project\\hdb carpark\\data\\mpsz' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "hdb carpark/hdb_carpark.html#import-carpark-data",
    "href": "hdb carpark/hdb_carpark.html#import-carpark-data",
    "title": "hdb_carpark",
    "section": "3 Import carpark data",
    "text": "3 Import carpark data\n\ncarpark <- read_csv(\"data/hdb-carpark-information.csv\")\n\n\nglimpse(carpark)\n\nRows: 2,192\nColumns: 12\n$ car_park_no            <chr> \"ACB\", \"ACM\", \"AH1\", \"AK19\", \"AK31\", \"AK52\", \"A…\n$ address                <chr> \"BLK 270/271 ALBERT CENTRE BASEMENT CAR PARK\", …\n$ x_coord                <dbl> 30314.79, 33758.41, 29257.72, 28185.44, 29482.0…\n$ y_coord                <dbl> 31490.49, 33695.52, 34500.36, 39012.67, 38684.1…\n$ car_park_type          <chr> \"BASEMENT CAR PARK\", \"MULTI-STOREY CAR PARK\", \"…\n$ type_of_parking_system <chr> \"ELECTRONIC PARKING\", \"ELECTRONIC PARKING\", \"EL…\n$ short_term_parking     <chr> \"WHOLE DAY\", \"WHOLE DAY\", \"WHOLE DAY\", \"7AM-7PM…\n$ free_parking           <chr> \"NO\", \"SUN & PH FR 7AM-10.30PM\", \"SUN & PH FR 7…\n$ night_parking          <chr> \"YES\", \"YES\", \"YES\", \"NO\", \"NO\", \"YES\", \"NO\", \"…\n$ car_park_decks         <dbl> 1, 5, 0, 0, 0, 0, 0, 0, 0, 6, 2, 3, 6, 12, 12, …\n$ gantry_height          <dbl> 1.80, 2.10, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ car_park_basement      <chr> \"Y\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N…\n\n\n\nst_crs(carpark)\n\nCoordinate Reference System: NA\n\n\n\ncarpark_sf <- st_as_sf(carpark, coords = c(\"x_coord\", \"y_coord\"), crs=4326) %>%\n  st_transform(crs = 3414)\ncarpark_sf\n\nSimple feature collection with 2192 features and 10 fields (with 2192 geometries empty)\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 2,192 × 11\n   car_park_no address   car_p…¹ type_…² short…³ free_…⁴ night…⁵ car_p…⁶ gantr…⁷\n * <chr>       <chr>     <chr>   <chr>   <chr>   <chr>   <chr>     <dbl>   <dbl>\n 1 ACB         BLK 270/… BASEME… ELECTR… WHOLE … NO      YES           1    1.8 \n 2 ACM         BLK 98A … MULTI-… ELECTR… WHOLE … SUN & … YES           5    2.1 \n 3 AH1         BLK 101 … SURFAC… ELECTR… WHOLE … SUN & … YES           0    0   \n 4 AK19        BLOCK 25… SURFAC… COUPON… 7AM-7PM NO      NO            0    0   \n 5 AK31        BLK 302/… SURFAC… COUPON… NO      NO      NO            0    0   \n 6 AK52        BLOCK 51… SURFAC… COUPON… WHOLE … NO      YES           0    0   \n 7 AK6         BLOCK 72… SURFAC… COUPON… 7AM-10… SUN & … NO            0    0   \n 8 AK83        BLK 5022… SURFAC… COUPON… NO      NO      NO            0    0   \n 9 AK9         ANG MO K… SURFAC… COUPON… NO      NO      NO            0    0   \n10 AM14        BLK 227 … MULTI-… ELECTR… WHOLE … NO      YES           6    2.15\n# … with 2,182 more rows, 2 more variables: car_park_basement <chr>,\n#   geometry <POINT [m]>, and abbreviated variable names ¹​car_park_type,\n#   ²​type_of_parking_system, ³​short_term_parking, ⁴​free_parking,\n#   ⁵​night_parking, ⁶​car_park_decks, ⁷​gantry_height"
>>>>>>> 1c9496841a615110f545a3a35bae6fae33b046e0
  }
]